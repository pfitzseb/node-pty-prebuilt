# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - script: |
      sudo apt-get -qq install g++-multilib
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npx prebuild --all -u $GITHUB_RELEASE_TOKEN
    env:
      GITHUB_RELEASE_TOKEN: $(GITHUB_RELEASE_TOKEN)
    displayName: 'Prebuild and publish'
- job: LinuxIA32
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - script: |
      sudo apt-get -qq install g++-multilib
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npx prebuild --all -a ia32 -u $GITHUB_RELEASE_TOKEN
    env:
      GITHUB_RELEASE_TOKEN: $(GITHUB_RELEASE_TOKEN)
    displayName: 'Prebuild and publish'
- job: macOSNode
  pool:
    vmImage: 'xcode9-macos10.13'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'
  - script: |
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npx prebuild -t 5.0.0 -t 6.0.0 -t 7.0.0 -t 8.0.0 -t 10.0.0 -t 11.0.0 -t 12.0.0 -u $GITHUB_RELEASE_TOKEN
    env:
      GITHUB_RELEASE_TOKEN: $(GITHUB_RELEASE_TOKEN)
    displayName: 'Prebuild and publish'
- job: macOSElectron
  pool:
    vmImage: 'xcode9-macos10.13'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'
  - script: |
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npx prebuild -t 3.0.0 -t 4.0.0 -t 4.0.4 -t 5.0.0 -r electron -u $GITHUB_RELEASE_TOKEN
    env:
      GITHUB_RELEASE_TOKEN: $(GITHUB_RELEASE_TOKEN)
    displayName: 'Prebuild and publish'
- job: WindowsNode
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
      architecture: 'x64'
  - script: |
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npm config set msvs_version 2017
      node-gyp configure --msvs_version=2017
    displayName: 'Set msvs_version'
  - script: |
      npx prebuild -t 5.0.0 -t 6.0.0 -t 7.0.0 -t 8.0.0 -t 10.0.0 -t 11.0.0 -t 12.0.0 --include-regex "\.(node|exe|dll|pdb)$" -u %GITHUB_RELEASE_TOKEN%
    env:
      GITHUB_RELEASE_TOKEN: $(GITHUB_RELEASE_TOKEN)
    displayName: 'Prebuild and publish'
- job: WindowsElectron
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
      architecture: 'x64'
  - script: |
      npm i
    displayName: 'Install dependencies and build'
  - script: |
      npm config set msvs_version 2017
      node-gyp configure --msvs_version=2017
    displayName: 'Set msvs_version'
  - script: |
      npx prebuild -t 1.7.0 -t 1.8.0 -t 2.0.0 -t 3.0.0 -t 4.0.0 -t 4.0.4 -t 5.0.0 -r electron --include-regex "\.(node|exe|dll|pdb)$" -u %GITHUB_RELEASE_TOKEN%
    env:
      GITHUB_RELEASE_TOKEN: $(GITHUB_RELEASE_TOKEN)
    displayName: 'Prebuild and publish'
